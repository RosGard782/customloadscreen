name: Build CustomLoadScreen

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies for MXE
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf automake autopoint bash bison bzip2 cmake flex g++ gperf intltool \
            libffi-dev libgdk-pixbuf2.0-dev libgl1-mesa-dev libltdl-dev \
            libssl-dev libtool-bin libxml-parser-perl lzip make openssl \
            python3 python3-mako python3-pip ruby sed unzip wget xz-utils

      - name: Cache MXE build
        uses: actions/cache@v4
        with:
          path: mxe
          key: mxe-i686-qtbase-v2-${{ runner.os }}
          restore-keys: |
            mxe-i686-qtbase-v2-${{ runner.os }}-

      - name: Download and build MXE (if not cached)
        run: |
          if [ ! -d "mxe" ]; then
            git clone https://github.com/mxe/mxe.git --depth=1
            cd mxe
            make qtbase MXE_TARGETS='i686-w64-mingw32.static' -j$(nproc)
            cd ..
          fi

      - name: Build .asi with qmake and make (i686)
        run: |
          export PATH="$GITHUB_WORKSPACE/mxe/usr/bin:$PATH"
          export QTDIR="$GITHUB_WORKSPACE/mxe/usr/i686-w64-mingw32.static/qt5"
          export QMAKESPEC="$QTDIR/mkspecs/win32-g++"
          export CC=i686-w64-mingw32.static-gcc
          export CXX=i686-w64-mingw32.static-g++
          "$QTDIR/bin/qmake" -spec win32-g++ CONFIG+=release CustomLoadScreen.pro
          make -j$(nproc)

      - name: Find build artifacts and move to workspace
        run: |
          # Найти .asi если он в subdir и перенести в корень
          asi_path=$(find . -name 'CustomLoadScreen.asi' | head -n1)
          png_path=$(find . -name 'CustomLoadScreen.png' | head -n1)
          if [ -f "$asi_path" ] && [ "$asi_path" != "./CustomLoadScreen.asi" ]; then
            mv "$asi_path" ./CustomLoadScreen.asi
          fi
          if [ -f "$png_path" ] && [ "$png_path" != "./CustomLoadScreen.png" ]; then
            mv "$png_path" ./CustomLoadScreen.png
          fi
          ls -l

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: customloadscreen-artifacts
          path: |
            CustomLoadScreen.asi
            CustomLoadScreen.png
